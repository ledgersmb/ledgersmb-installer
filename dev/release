#!/bin/bash

set -euxo pipefail

version=$1
shift

if [ -z "$version" ]
then
  echo -e "Error: no version specified\n\nusage: release <version>\n"
  exit 1
fi

modified_files="$(git status --short | grep -v ^\?\? || [[ $? == 1 ]])"
if [ -n "$modified_files" ]
then
  echo -e "Error: repository not clean\n\nStash changes before starting the release process\n"
  exit 2
fi

perl -pi -e 's/^package ([^ ;]+)( v\d+\.\d+\.\d+)?;/package $1 '"$version"';/' $(find lib -name '*.pm')
git commit -am "Update version" || true
git tag $version

perl -Mversion -pi -e 'my $v = version->parse(version->parse("'"$version"'")->numify + version->parse("v0.0.1")->numify)->normal; s/^package ([^ ;]+)( v\d+\.\d+\.\d+)?;/package $1 $v;/' $(find lib -name '*.pm')
git commit -am "Post-release version update"

git checkout $version
# update MANIFEST
(git ls-files | grep -v '^\.' | grep -vE '^(dev|docker)/' ; echo "MANIFEST" ) | sort > MANIFEST

# update Makefile
perl ./Makefile.PL

make test
make dist

dev/build $version
dev/publish
